// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieManagement.DataAccess.Context;

#nullable disable

namespace MovieManagement.DataAccess.Migrations
{
    [DbContext(typeof(MovieManagementDbContext))]
    [Migration("20230909181312_addedbasemodel")]
    partial class addedbasemodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("GenreMovie");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9072), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Chuck",
                            IsDeleted = false,
                            LastName = "Norris",
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9072), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            Age = 0,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9113), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Doe",
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9113), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            Age = 0,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9115), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Van",
                            IsDeleted = false,
                            LastName = "Helsing",
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9115), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            Age = 0,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9116), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Ana",
                            IsDeleted = false,
                            LastName = "Hathway",
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9116), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            Age = 0,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9117), new TimeSpan(0, 0, 0, 0, 0)),
                            FirstName = "Mia",
                            IsDeleted = false,
                            LastName = "Khalifa",
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9117), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Biography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActorId")
                        .IsUnique();

                    b.ToTable("Biographies");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9267), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9267), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9268), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9268), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9270), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9270), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActorId = 1,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9243), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Box office we coming",
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9243), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wakanda Forever"
                        },
                        new
                        {
                            Id = 2,
                            ActorId = 2,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9245), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Box office we coming",
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9245), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wakanda Forever"
                        },
                        new
                        {
                            Id = 3,
                            ActorId = 5,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9250), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Box office we coming",
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9250), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wakanda Forever"
                        },
                        new
                        {
                            Id = 4,
                            ActorId = 3,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9251), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Spiderman we coming",
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9251), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spiderman"
                        },
                        new
                        {
                            Id = 5,
                            ActorId = 4,
                            CreatedBy = "System",
                            CreatedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9252), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Matrix Reloaded we coming",
                            IsDeleted = false,
                            ModifiedBy = "System",
                            ModifiedOn = new DateTimeOffset(new DateTime(2023, 9, 9, 18, 13, 12, 521, DateTimeKind.Unspecified).AddTicks(9252), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Matrix Reloaded"
                        });
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieManagement.Domain.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Biography", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entities.Actor", "Actor")
                        .WithOne("Biography")
                        .HasForeignKey("MovieManagement.Domain.Entities.Biography", "ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Movie", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entities.Actor", "Actor")
                        .WithMany("Movies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entities.Actor", b =>
                {
                    b.Navigation("Biography");

                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
